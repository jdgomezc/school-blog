---
import Layout from "../../layouts/Layout.astro";
import EditCard from "../../components/Edit";

const apiURL = new URL("/api/posts/index.json", Astro.url);

const session = Astro.locals.session;

const posts: Post[] = await fetch(apiURL, {
          method: 'GET',
        })
		.then(res => res.json())
		.then(data => {
			return data;
		});

if (!session) {
  return Astro.redirect('/login');
}

---

<Layout>
  <div class="grid place-items-center overflow-hidden flex-1">
    <EditCard client:load posts={posts} />
  </div>

  <script>
    import authClient from '../../lib/auth-client';
    const fileTitle = document.getElementById('title');
    const fileDescription = document.getElementById('description');
    const fileInput = document.getElementById('input');
    const typeButtons = document.querySelectorAll('#post-type-btn button');

    let post_type: PostType = "POST";
    let fileUploaded: File | null = null;

    fileInput?.addEventListener('change', async (e) => {
          fileUploaded = (e.target as HTMLInputElement)?.files?.[0] || null;
          
          if (fileUploaded) {
            console.log("File uploaded")
          };
        });

    typeButtons.forEach(button => {
      button.addEventListener('click', () => {
        typeButtons.forEach(btn => {
          btn.classList.remove('bg-primary', 'text-primary-foreground');
          btn.setAttribute('variant', 'outline');
        });
        
        button.classList.add('bg-primary', 'text-primary-foreground');
        button.setAttribute('variant', 'default');
        
        post_type = button.getAttribute('datatype') as PostType;
      });
    });
    
    document.getElementById('publish-button')?.addEventListener('click', async () => {
      if (!fileUploaded) {
        console.error('No file uploaded');
        return;
      }

      const file_title = fileTitle?.value
      const file_description = fileDescription?.value

      if (!file_title || !file_description) {
        console.error('Title or description missing');
        return;
      }

      try {
        const uploadedResult = await fetch('/api/files/index.json', {
          method: 'POST',
          body: fileUploaded,
          headers: {
            'x-file-name': fileUploaded.name,
            'content-type': fileUploaded.type
          }
        });

        if (!uploadedResult.ok) {
          throw new Error('Upload of file failed');
        }
        
        const fileResult = await uploadedResult.json();

        const userEmail = await authClient.getSession();

        const response = await fetch('/api/posts/index.json', {
          method: 'POST',
          body: JSON.stringify({
            email: userEmail.data?.user.email,
            title: file_title,
            description: file_description,
            file_url: fileResult.shareableLink,
            file_download_url: fileResult.downloadLink,
            type: post_type
          }),
        });

        if (response.ok) {
          console.log('File uploaded:', response);
        } else {
          throw new Error('Upload of post failed');
        }
      } catch (error) {
        console.error('Upload error:', error);
      }

      fileTitle.value = '';
      fileDescription.value = '';
      fileInput.value = '';
    });
  </script>
</Layout>
