---
import Layout from "../layouts/Layout.astro";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Card, CardContent } from "@/components/ui/card";
import { Upload, Send } from "lucide-react";

if (!Astro.locals.session) {
  return Astro.redirect('/login');
}

console.log("SESSION", Astro.locals.session);

const userEmail = Astro.locals.user?.email;

const post_type = "POST";
const post_types = ['POST', 'ANNOUNCEMENT', 'MEETING', 'SCHEDULE'];

---

<Layout>
  <div class="grid place-items-center overflow-hidden flex-1">
    <Card className="w-full max-w-4xl mx-4 shadow-lg">
      <div class="p-4 flex flex-col h-full justify-between">
        <h1 class="text-lg font-bold text-center mb-3">Elige un tipo de publicación</h1>

        <div id="post-type-btn" class="flex flex-wrap justify-center gap-10 mb-3">
          {['Publicaciones', 'Anuncios', 'Convocatorias', 'Cronogramas'].map((tipo, index) => (
            <Button datatype={post_types[index]} key={tipo} variant="outline" className="px-3 py-1 text-sm">{tipo}</Button>
          ))}
        </div>

        <CardContent className="p-0 h-72 flex flex-col">
          <div class="flex flex-col gap-2">
            <Input id="title" placeholder="Título" className="px-2 py-4 border rounded-sm !text-lg" />
            <Textarea id="description" placeholder="Descripción" className="p-2 border rounded-sm text-sm resize-none h-36 !text-lg" rows={15} />
          </div>

          <div class="flex flex-col sm:flex-row justify-between items-center gap-2 mt-3 mt-auto">
            <Button variant="outline" className="flex items-center gap-2 w-full sm:w-auto text-sm">
              <!-- <Upload id="input" size={14} /> Adjuntar archivo -->
               <input type="file" id="input" />
            </Button>
            <Button id="publish-button" className="flex items-center gap-2 w-full sm:w-auto text-sm">
              <Send size={14} /> Publicar
            </Button>
          </div>
        </CardContent>
      </div>
    </Card>
  </div>

  <script>
    import authClient from '../lib/auth-client';
    const fileTitle = document.getElementById('title');
    const fileDescription = document.getElementById('description');
    const fileInput = document.getElementById('input');
    const typeButtons = document.querySelectorAll('#post-type-btn button');

    let post_type: PostType = "POST";
    let fileUploaded: File | null = null;

    fileInput?.addEventListener('change', async (e) => {
          fileUploaded = (e.target as HTMLInputElement)?.files?.[0] || null;
          
          if (fileUploaded) {
            console.log("File uploaded")
          };
        });

    typeButtons.forEach(button => {
      button.addEventListener('click', () => {
        typeButtons.forEach(btn => {
          btn.classList.remove('bg-primary', 'text-primary-foreground');
          btn.setAttribute('variant', 'outline');
        });
        
        button.classList.add('bg-primary', 'text-primary-foreground');
        button.setAttribute('variant', 'default');
        
        post_type = button.getAttribute('datatype') as PostType;
      });
    });
    
    document.getElementById('publish-button')?.addEventListener('click', async () => {
      if (!fileUploaded) {
        console.error('No file uploaded');
        return;
      }

      const file_title = fileTitle?.value
      const file_description = fileDescription?.value

      if (!file_title || !file_description) {
        console.error('Title or description missing');
        return;
      }

      try {
        const uploadedResult = await fetch('/api/files/index.json', {
          method: 'POST',
          body: fileUploaded,
          headers: {
            'x-file-name': fileUploaded.name,
            'content-type': fileUploaded.type
          }
        });

        if (!uploadedResult.ok) {
          throw new Error('Upload of file failed');
        }
        
        const fileResult = await uploadedResult.json();

        const userEmail = await authClient.getSession();

        const response = await fetch('/api/posts/index.json', {
          method: 'POST',
          body: JSON.stringify({
            email: userEmail.data?.user.email,
            title: file_title,
            description: file_description,
            file_url: fileResult.shareableLink,
            file_download_url: fileResult.downloadLink,
            type: post_type
          }),
        });

        if (response.ok) {
          console.log('File uploaded:', response);
        } else {
          throw new Error('Upload of post failed');
        }
      } catch (error) {
        console.error('Upload error:', error);
      }

      fileTitle.value = '';
      fileDescription.value = '';
      fileInput.value = '';
    });
  </script>
</Layout>
